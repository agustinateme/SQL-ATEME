USE ECOMDB;

CREATE TABLE HISTORIAL_ORDEN_VENTA (
    ID_HISTORIAL INT PRIMARY KEY AUTO_INCREMENT,
    IDORDEN INT,
    ESTADO_ANTERIOR VARCHAR(100),
    ESTADO_ACTUAL VARCHAR(100),
    FECHA_CAMBIO DATETIME,
    FOREIGN KEY (IDORDEN) REFERENCES ORDENDEVENTA(IDORDEN)
);

-- Este trigger verifica si el correo electrónico de un usuario es único al insertar un nuevo usuario
DELIMITER //
CREATE TRIGGER usuario_email_unico
BEFORE INSERT ON USUARIO
FOR EACH ROW
BEGIN
    DECLARE email_count INT;
    
    SELECT COUNT(1) INTO email_count
        FROM USUARIO
    WHERE EMAIL = NEW.EMAIL;
    
    IF email_count > 0 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'El correo electrónico ya está en uso.';
    END IF;
END 
//
DELIMITER ;

DELIMITER //
-- Este trigger registra los cambios en el estado de las órdenes de venta en un historial.
CREATE TRIGGER registro_cambios_orden_venta
AFTER UPDATE ON ORDENDEVENTA
FOR EACH ROW
BEGIN
    INSERT INTO HISTORIAL_ORDEN_VENTA (IDORDEN, ESTADO_ANTERIOR, ESTADO_ACTUAL, FECHA_CAMBIO)
    VALUES (NEW.IDORDEN, OLD.ESTADO, NEW.ESTADO, NOW());
END; 
//
DELIMITER ;

-- Triggers para actualizar el total de un carrito, después de una inserción, eliminación y actualización en la tabla DETALLE_CARRITO
DELIMITER //
-- Trigger para INSERT
CREATE TRIGGER after_insert_detalle_carrito
AFTER INSERT ON DETALLE_CARRITO
FOR EACH ROW
BEGIN
    UPDATE CARRITO
    SET TOTAL = (
        SELECT COALESCE(SUM(PRODUCTO.PRECIO * DETALLE_CARRITO.CANTIDAD), 0)
        FROM DETALLE_CARRITO
        INNER JOIN PRODUCTO ON DETALLE_CARRITO.IDPRODUCTO = PRODUCTO.IDPRODUCTO
        WHERE DETALLE_CARRITO.IDCARRITO = NEW.IDCARRITO
    )
    WHERE IDCARRITO = NEW.IDCARRITO;
END;
//

-- Trigger para DELETE
CREATE TRIGGER after_delete_detalle_carrito
AFTER DELETE ON DETALLE_CARRITO
FOR EACH ROW
BEGIN
    UPDATE CARRITO
    SET TOTAL = (
        SELECT COALESCE(SUM(PRODUCTO.PRECIO * DETALLE_CARRITO.CANTIDAD), 0)
        FROM DETALLE_CARRITO
        INNER JOIN PRODUCTO ON DETALLE_CARRITO.IDPRODUCTO = PRODUCTO.IDPRODUCTO
        WHERE DETALLE_CARRITO.IDCARRITO = OLD.IDCARRITO
    )
    WHERE IDCARRITO = OLD.IDCARRITO;
END;
//

-- Trigger para UPDATE
CREATE TRIGGER after_update_detalle_carrito
AFTER UPDATE ON DETALLE_CARRITO
FOR EACH ROW
BEGIN
    UPDATE CARRITO
    SET TOTAL = (
        SELECT COALESCE(SUM(PRODUCTO.PRECIO * DETALLE_CARRITO.CANTIDAD), 0)
        FROM DETALLE_CARRITO
        INNER JOIN PRODUCTO ON DETALLE_CARRITO.IDPRODUCTO = PRODUCTO.IDPRODUCTO
        WHERE DETALLE_CARRITO.IDCARRITO = NEW.IDCARRITO
    )
    WHERE IDCARRITO = NEW.IDCARRITO;
END;
//
DELIMITER ;
